---
- name: microk8s | Update the /etc/hosts file with node name
  ansible.builtin.lineinfile:
    path: "/etc/hosts"
    regexp: ".*\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
    line: "{{ hostvars[item]['ansible_env']}}\t{{ hostvars[item]['ansible_hostname']}}\t{{ hostvars[item]['ansible_hostname']}}"
    state: present
    backup: true
  register: etchostsupdate
  when: ansible_hostname != "{{ item }}" or ansible_hostname == "{{ item }}"
  with_items: "{{groups['microk8s_ha']}}"

- name: microk8s | Find the designated host
  ansible.builtin.set_fact:
    designated_host: 'node1'


- name: Waiting for microk8s to be ready on microk8s host master
  ansible.builtin.command: "microk8s status --wait-ready"
  delegate_to: "{{ designated_host }}"
  delegate_facts: true
  changed_when: false

- name: Get the microk8s join command from the microk8s master
  ansible.builtin.shell: "microk8s add-node | grep -E -m1 'microk8s join {{ microk8s_ip_regex_ha }}'"
  delegate_to: "{{ designated_host }}"
  delegate_facts: true
  changed_when: false
  register: microk8s_join_command

- name: Get microk8s cluster nodes
  ansible.builtin.command: "microk8s kubectl get node"
  delegate_to: "{{ designated_host }}"
  delegate_facts: true
  changed_when: false
  register: microk8s_cluster_node

- name: Waiting for microk8s to be ready on microk8s host node
  ansible.builtin.command: "microk8s status --wait-ready"
  changed_when: false

- name: Set the microk8s join command on the microk8s node
  ansible.builtin.command: "{{ microk8s_join_command.stdout }}"
  when: microk8s_cluster_node.stdout.find(inventory_hostname) == -1
  register: join_command_output
  failed_when:
    - "'already known to dqlite' not in join_command_output.stdout"
    - join_command_output.rc > 0

- name: microk8s | configure cluster addons
  include_tasks: addons.yml
  when: inventory_hostname == designated_host
